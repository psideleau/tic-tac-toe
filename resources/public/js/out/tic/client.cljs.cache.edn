;; Analyzed by ClojureScript 1.7.122
{:use-macros {sel1 dommy.core, sel dommy.core}, :excludes #{}, :name tic.client, :imports nil, :requires {ajax.core ajax.core, dommy dommy.core, dommy.core dommy.core, str clojure.string, clojure.string clojure.string}, :uses {POST ajax.core, GET ajax.core}, :defs {game {:name tic.client/game, :file "src/cljs/tic/client.cljs", :line 9, :column 1, :end-line 9, :end-column 10, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 9, :column 6, :end-line 9, :end-column 10}}, update-board {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 11, :column 7, :end-line 11, :end-column 19, :arglists (quote ([board]))}, :name tic.client/update-board, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 19, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, start-game-handler {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 18, :column 7, :end-line 18, :end-column 25, :arglists (quote ([response]))}, :name tic.client/start-game-handler, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 25, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, take-square-handler {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 24, :column 7, :end-line 24, :end-column 26, :arglists (quote ([response]))}, :name tic.client/take-square-handler, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 26, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, error-handler {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 29, :column 7, :end-line 29, :end-column 20, :arglists (quote ([{:keys [status status-text]}]))}, :name tic.client/error-handler, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 20, :method-params ([p__8282]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [status status-text]}]))}, start-game {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 32, :column 7, :end-line 32, :end-column 17, :arglists (quote ([e]))}, :name tic.client/start-game, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 17, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, take-square {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 40, :column 7, :end-line 40, :end-column 18, :arglists (quote ([e]))}, :name tic.client/take-square, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 18, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, say-hello {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 51, :column 7, :end-line 51, :end-column 16, :arglists (quote ([e]))}, :name tic.client/say-hello, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 16, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, init {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 62, :column 7, :end-line 62, :end-column 11, :arglists (quote ([]))}, :name tic.client/init, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {dommy dommy.core, dommy.core dommy.core}, :cljs.analyzer/constants {:seen #{:format :tied-method :keywords? :game :response-format :status-text :params :error-handler :callback-methods :click :winner-method :status :json :handler :board}, :order [:board :game :status :status-text :handler :error-handler :format :keywords? :response-format :json :params :callback-methods :winner-method :tied-method :click]}, :doc nil}