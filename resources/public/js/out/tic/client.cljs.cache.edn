;; Analyzed by ClojureScript 1.7.122
{:use-macros {sel1 dommy.core, sel dommy.core}, :excludes #{}, :name tic.client, :imports nil, :requires {ajax.core ajax.core, dommy dommy.core, dommy.core dommy.core, str clojure.string, clojure.string clojure.string}, :uses {POST ajax.core, GET ajax.core}, :defs {take-square {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 49, :column 7, :end-line 49, :end-column 18, :arglists (quote ([e]))}, :name tic.client/take-square, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 18, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, tied {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 26, :column 16, :end-line 26, :end-column 20, :export true, :arglists (quote ([]))}, :name tic.client/tied, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, start-game-handler {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 18, :column 7, :end-line 18, :end-column 25, :arglists (quote ([response]))}, :name tic.client/start-game-handler, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 25, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, won {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 23, :column 16, :end-line 23, :end-column 19, :export true, :arglists (quote ([]))}, :name tic.client/won, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 71, :column 7, :end-line 71, :end-column 11, :arglists (quote ([]))}, :name tic.client/init, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-board {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 11, :column 7, :end-line 11, :end-column 19, :arglists (quote ([board]))}, :name tic.client/update-board, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 19, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, game {:name tic.client/game, :file "src/cljs/tic/client.cljs", :line 9, :column 1, :end-line 9, :end-column 10, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 9, :column 6, :end-line 9, :end-column 10}}, start-game {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 41, :column 7, :end-line 41, :end-column 17, :arglists (quote ([e]))}, :name tic.client/start-game, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 17, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, error-handler {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 38, :column 7, :end-line 38, :end-column 20, :arglists (quote ([{:keys [status status-text]}]))}, :name tic.client/error-handler, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 20, :method-params ([p__6016]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [status status-text]}]))}, take-square-handler {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 29, :column 7, :end-line 29, :end-column 26, :arglists (quote ([response]))}, :name tic.client/take-square-handler, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 26, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, say-hello {:protocol-inline nil, :meta {:file "/Users/paul_sideleau/Development/sourcecode/course/tic/src/cljs/tic/client.cljs", :line 60, :column 7, :end-line 60, :end-column 16, :arglists (quote ([e]))}, :name tic.client/say-hello, :variadic false, :file "src/cljs/tic/client.cljs", :end-column 16, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}}, :require-macros {dommy dommy.core, dommy.core dommy.core}, :cljs.analyzer/constants {:seen #{:callback-method :format :tied-method :keywords? :winner :game :response-format :status-text :params :error-handler :callback-methods :click :winner-method :status :json :handler :board}, :order [:board :winner :game :callback-method :status :status-text :handler :error-handler :format :keywords? :response-format :json :params :callback-methods :winner-method :tied-method :click]}, :doc nil}